generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Directory {
  id             Int      @id @default(autoincrement())
  titleDirectory String   @unique
  files          String[]
  userId         Int
  user           User[]
}

model Collaborators {
  id          Int      @id @default(autoincrement())
  chat        Chat     @relation(fields: [chatId], references: [id])
  chatId      Int
  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  permissions String[] // this camp is the permissions of the user in the chat
}

model Chat {
  id            Int             @id @default(autoincrement())
  title         String
  description   String
  fileUrl       String
  contextChat   String? // this camp is the conversation between the user and the bot /* debemos de hacer una especie de objeto o array, para guardar las preguntas que hizo el usuario y las respuesta a dichas preguntas */
  contextDoc    String // this camp is the content file pdf
  collaborators Collaborators[]
  userId        Int
  user          User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model User {
  id            Int             @id @default(autoincrement())
  profilePic    String?
  username      String
  lastName      String
  email         String          @unique
  phoneNumber   String          @unique
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  chats         Chat[]
  directories   Directory[]
  Collaborators Collaborators[]
}
